version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.14.2
        environment:
          - APPLICATION: springload/govt-nz-design-system
          - C_FORCE_ROOT: 1
          - LC_ALL: en_US.UTF-8
          - PROJECT: govt-nz-design-system

    steps:
      - checkout

      - run:
          name: Install package dependencies
          command: |-
            sudo apt-get update && sudo apt-get install -y python3 python3-dev python3-pip

      - run:
          name: build site
          command: |-
            npm install yarn
            rm ./package-lock.json
            yarn
            yarn build
            yarn build:website
      - run:
          name: test
          command: |-
            yarn test
      - run:
          name: set ENVIRONMENT variable
          command: |-
            set -e
            SHORT_COMMIT=$(git rev-parse --short HEAD)
            echo "export APP_VERSION=\"${SHORT_COMMIT}\"" >> $BASH_ENV
            if [ "${CIRCLE_BRANCH:0:7}" == "deploy/" ] ;
              then
                echo "export ENVIRONMENT=`basename "${CIRCLE_BRANCH}"`" >> $BASH_ENV
              else
                echo "export ENVIRONMENT=test" >> $BASH_ENV
            fi

      - deploy:
          name: Deploy site
          region: ap-southeast-2
          command: |-
            set -e
            . $BASH_ENV

            if [ "${CIRCLE_BRANCH}" == "deploy/alpha" ] || [ "${CIRCLE_BRANCH}" == "deploy/preview" ]; then

                pip3 install -Ur .circleci/requirements.txt
                cd packages/govtnz-ds-website/public
                export PATH=~/.local/bin:$PATH
                aws configure set default.region ap-southeast-2;
                aws configure set default.output json;
                aws configure set preview.cloudfront true;
                version="$(git show --format="%h" --no-patch)"
                echo "Version ${version}"
                aws s3 sync --delete --metadata "version=${version}" --cache-control max-age=900 . s3://${PROJECT}-${ENVIRONMENT}/;
                aws cloudfront create-invalidation --distribution-id $SITE_DISTRIBUTION_ID --paths '/*';
                exit $?
            fi
