// @autogenerated

// WARNING THIS FILE IS AUTOGENERATED! DO NOT EDIT!

import React, { Fragment } from 'react';
import ReactDOM from 'react-dom';

import FieldsetBlock from '@govtnz/ds/build/react-ts/FieldsetBlock.tsx';import H1 from '@govtnz/ds/build/react-ts/H1.tsx';import RadioBlockWithHint from '@govtnz/ds/build/react-ts/RadioBlockWithHint.tsx';import FormDivider from '@govtnz/ds/build/react-ts/FormDivider.tsx';
const onChangeGenerator = comp => ({});
const ExampleContainer = ({ children }) => <Fragment>{children}</Fragment>;
const ExampleHeading = ({ children }) => <Fragment>{children}</Fragment>;
const ExampleSection = ({ children }) => (
  <div className="example__section">{children}</div>
);
const Example = ({ children }) => <Fragment>{children}</Fragment>;

var PageContent = (props) => (<Example {...onChangeGenerator(Example)}>
            <FieldsetBlock {...onChangeGenerator(FieldsetBlock)} legend={<H1 {...onChangeGenerator(H1)} styleSize="large" id="providerChoiceTitle2">Choose one provider</H1>} hint={<p>Select one provider.</p>} hintId="hintId234">
                <RadioBlockWithHint {...onChangeGenerator(RadioBlockWithHint)} label="Sign in with Aardvark Services" hint="North Island only" hintId="someHintId72344" radioId="anyRadioId7345" name="providerChoice3" value="provider1" labelId="labelId5" />
                <RadioBlockWithHint {...onChangeGenerator(RadioBlockWithHint)} label="Sign in with Dandelion Services" hint="South and Stewart Islands only" hintId="someHintId8533" radioId="anyRadioId8345" name="providerChoice3" value="provider2" labelId="labelId8" />
                <FormDivider {...onChangeGenerator(FormDivider)}><p>-or-</p></FormDivider>
                <RadioBlockWithHint {...onChangeGenerator(RadioBlockWithHint)} label="Sign in with Eel Services" hint="Non-New Zealand residents only" hintId="someHintId7234444" radioId="anyRadioId3459" name="providerChoice3" value="provider3" labelId="labelId9" />
        </FieldsetBlock>
    </Example>);

    document.addEventListener('DOMContentLoaded', () => {
      const selector = '#root';
      const root = document.querySelector(selector);
      if (!root) {
        console.error("Couldn't find app mount point ", selector);
        return;
      }
      ReactDOM.hydrate(<PageContent />, root, window.afterRender);
    });
    