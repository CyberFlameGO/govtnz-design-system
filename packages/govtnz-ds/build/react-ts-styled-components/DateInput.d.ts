import * as React from "react";
declare type Props = {
    error?: boolean | undefined;
    hintId?: string | undefined;
    errorId?: string | undefined;
    label?: React.ReactNode;
    hint?: React.ReactNode;
    id?: string | undefined;
    dayId?: string | undefined;
    name: string;
    disabled?: boolean | undefined;
    readOnly?: boolean | undefined;
    autoFocus?: boolean | undefined;
    value?: string | undefined;
    spellCheck?: boolean | undefined;
    autoComplete: React.InputHTMLAttributes<HTMLInputElement>["autoComplete"];
    onChange: any;
    monthId?: string | undefined;
    name2: string;
    disabled2?: boolean | undefined;
    readOnly2?: boolean | undefined;
    autoFocus2?: boolean | undefined;
    value2?: string | undefined;
    spellCheck2?: boolean | undefined;
    autoComplete2: React.InputHTMLAttributes<HTMLInputElement>["autoComplete"];
    onChange2: any;
    yearId?: string | undefined;
    name3: string;
    disabled3?: boolean | undefined;
    readOnly3?: boolean | undefined;
    autoFocus3?: boolean | undefined;
    value3?: string | undefined;
    spellCheck3?: boolean | undefined;
    autoComplete3: React.InputHTMLAttributes<HTMLInputElement>["autoComplete"];
    onChange3: any;
};
declare const DateInput: ({ error, hintId, errorId, label, hint, id, dayId, name, disabled, readOnly, autoFocus, value, spellCheck, autoComplete, onChange, monthId, name2, disabled2, readOnly2, autoFocus2, value2, spellCheck2, autoComplete2, onChange2, yearId, name3, disabled3, readOnly3, autoFocus3, value3, spellCheck3, autoComplete3, onChange3 }: Props) => JSX.Element;
export default DateInput;
